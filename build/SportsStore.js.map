{"version":3,"sources":["webpack://SportsStore/webpack/bootstrap","webpack://SportsStore/external \"rxjs\"","webpack://SportsStore/./node_modules/@codewithdan/observable-store/dist/index.js","webpack://SportsStore/./src/SportsStore.ts","webpack://SportsStore/./node_modules/@codewithdan/observable-store/dist/observable-store.js","webpack://SportsStore/./node_modules/@codewithdan/observable-store/dist/observable-store-base.js","webpack://SportsStore/./node_modules/@codewithdan/observable-store/dist/utilities/cloner.service.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","observable_store_1","ObservableStore","__webpack_exports__","sportsStoreActions","rxjs__WEBPACK_IMPORTED_MODULE_0__","_codewithdan_observable_store__WEBPACK_IMPORTED_MODULE_1__","__extends","extendStatics","b","setPrototypeOf","__proto__","Array","__","this","constructor","SportsStore","_super","_this","trackStateHistory","logStateChanges","setState","sports","matches","fetchSports","fetch","proxyurl","then","response","json","GetSports","getSports","state","getState","GetSport","__assign","assign","arguments","length","apply","rxjs_1","observable_store_base_1","settings","_stateDispatcher$","BehaviorSubject","_stateWithChangesDispatcher$","_settings","default","settingsDefaults","globalSettings","stateChanged","asObservable","globalStateChanged","globalStateDispatcher","stateWithPropertyChanges","globalStateWithPropertyChanges","globalStateWithChangesDispatcher","services","push","stateHistory","configurable","set","Error","addExtension","extension","_getStateOrSlice","action","dispatchState","previousState","newState","_updateState","beginState","endState","caller","console","log","logStateAction","deepClone","resetStateHistory","setStoreState","storeState","getStoreState","stateSliceSelector","stateChanges","dispatchGlobalState","clonedStateOrSlice","clonedGlobalState","includeStateChangesOnSubscribe","next","cloner_service_1","ObservableStoreBase","_storeState","_clonerService","ClonerService","_extensions","isProduction","clonedState","obj","init","result","Date","setTime","getTime","RegExp","newRegExp","JSON","parse","stringify","fixTypes","fixPropertyValue","original","copy","originalValue","newValue","isNaN","NaN","Infinity","index","getOwnPropertyNames","forEach","regexpText","String","slashIndex","lastIndexOf","slice"],"mappings":"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","file":"SportsStore.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","Object.defineProperty(exports, \"__esModule\", { value: true });\nvar observable_store_1 = require(\"./observable-store\");\nexports.ObservableStore = observable_store_1.ObservableStore;\n//# sourceMappingURL=index.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { of } from 'rxjs';\nimport { ObservableStore } from '@codewithdan/observable-store';\nvar SportsStore = /** @class */ (function (_super) {\n    __extends(SportsStore, _super);\n    function SportsStore() {\n        var _this = this;\n        var initialState = {\n            sports: {\n                matches: [],\n            },\n        };\n        _this = _super.call(this, { trackStateHistory: true, logStateChanges: true }) || this;\n        _this.setState(initialState, 'INIT_STATE');\n        return _this;\n    }\n    SportsStore.prototype.fetchSports = function () {\n        var _this = this;\n        var proxyurl = 'https://cors-anywhere.herokuapp.com/';\n        var url = 'https://api.beta.tab.com.au/v1/tab-info-service/sports/Basketball/competitions/NBA/markets?jurisdiction=NSW';\n        return fetch(proxyurl + url)\n            .then(function (response) { return response.json(); })\n            .then(function (sports) {\n            _this.setState({ sports: sports }, sportsStoreActions.GetSports);\n            return;\n        });\n    };\n    SportsStore.prototype.getSports = function () {\n        var _this = this;\n        var state = this.getState();\n        if (state && state.sports) {\n            return of(state.sports);\n        }\n        else {\n            return this.fetchSports().then(function (sports) {\n                return of(_this.getState().sports);\n            });\n        }\n    };\n    return SportsStore;\n}(ObservableStore));\nexport var sportsStoreActions = {\n    GetSports: 'GET_SPORTS',\n    GetSport: 'GET_SPORT',\n};\nexport default new SportsStore();\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar observable_store_base_1 = require(\"./observable-store-base\");\n/**\n * Core functionality for ObservableStore\n * providing getState(), setState() and additional functionality\n */\nvar ObservableStore = /** @class */ (function () {\n    function ObservableStore(settings) {\n        this._stateDispatcher$ = new rxjs_1.BehaviorSubject(null);\n        this._stateWithChangesDispatcher$ = new rxjs_1.BehaviorSubject(null);\n        this._settings = __assign(__assign(__assign({}, observable_store_base_1.default.settingsDefaults), settings), observable_store_base_1.default.globalSettings);\n        this.stateChanged = this._stateDispatcher$.asObservable();\n        this.globalStateChanged = observable_store_base_1.default.globalStateDispatcher.asObservable();\n        this.stateWithPropertyChanges = this._stateWithChangesDispatcher$.asObservable();\n        this.globalStateWithPropertyChanges = observable_store_base_1.default.globalStateWithChangesDispatcher.asObservable();\n        observable_store_base_1.default.services.push(this);\n    }\n    Object.defineProperty(ObservableStore.prototype, \"stateHistory\", {\n        /**\n         * Retrieve state history. Assumes trackStateHistory setting was set on the store.\n         */\n        get: function () {\n            return observable_store_base_1.default.stateHistory;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ObservableStore, \"globalSettings\", {\n        /**\n         * get/set global settings throughout the application for ObservableStore.\n         * See the [Observable Store Settings](https://github.com/danwahlin/observable-store#store-settings-per-service) documentation\n         * for additional information. Note that global settings can only be set once as the application first loads.\n         */\n        get: function () {\n            return observable_store_base_1.default.globalSettings;\n        },\n        set: function (settings) {\n            // ObservableStore['isTesting'] used so that unit tests can set globalSettings \n            // multiple times during a suite of tests\n            if (settings && (ObservableStore['isTesting'] || !observable_store_base_1.default.globalSettings)) {\n                observable_store_base_1.default.globalSettings = settings;\n            }\n            else if (!settings) {\n                throw new Error('Please provide the global settings you would like to apply to Observable Store');\n            }\n            else if (settings && observable_store_base_1.default.globalSettings) {\n                throw new Error('Observable Store global settings may only be set once when the application first loads.');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ObservableStore, \"allStoreServices\", {\n        /**\n         * Provides access to all services that interact with ObservableStore. Useful for extensions\n         * that need to be able to access a specific service.\n         */\n        get: function () {\n            return observable_store_base_1.default.services;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Used to add an extension into ObservableStore. The extension must implement the\n     * `ObservableStoreExtension` interface.\n     */\n    ObservableStore.addExtension = function (extension) {\n        observable_store_base_1.default.addExtension(extension);\n    };\n    /**\n     * Retrieve store's state. If using TypeScript (optional) then the state type defined when the store\n     * was created will be returned rather than `any`.\n     */\n    ObservableStore.prototype.getState = function () {\n        return this._getStateOrSlice();\n    };\n    /**\n     * Set store state. Pass the state to be updated as well as the action that is occuring.\n     * The state value can be a function [(see example)](https://github.com/danwahlin/observable-store#store-api).\n     * The latest store state is returned.\n     */\n    ObservableStore.prototype.setState = function (state, action, dispatchState) {\n        if (dispatchState === void 0) { dispatchState = true; }\n        // Needed for tracking below (don't move or delete)\n        var previousState = this.getState();\n        switch (typeof state) {\n            case 'function':\n                var newState = state(this.getState());\n                this._updateState(newState);\n                break;\n            case 'object':\n                this._updateState(state);\n                break;\n            default:\n                throw Error('Pass an object or a function for the state parameter when calling setState().');\n        }\n        if (this._settings.trackStateHistory) {\n            observable_store_base_1.default.stateHistory.push({\n                action: action,\n                beginState: previousState,\n                endState: this.getState()\n            });\n        }\n        if (dispatchState) {\n            this.dispatchState(state);\n        }\n        if (this._settings.logStateChanges) {\n            var caller = (this.constructor) ? '\\r\\nCaller: ' + this.constructor.name : '';\n            console.log('%cSTATE CHANGED', 'font-weight: bold', '\\r\\nAction: ', action, caller, '\\r\\nState: ', state);\n        }\n        return this.getState();\n    };\n    /**\n     * Add a custom state value and action into the state history. Assumes `trackStateHistory` setting was set\n     * on store or using the global settings.\n     */\n    ObservableStore.prototype.logStateAction = function (state, action) {\n        if (this._settings.trackStateHistory) {\n            observable_store_base_1.default.stateHistory.push({\n                action: action,\n                beginState: this.getState(),\n                endState: observable_store_base_1.default.deepClone(state)\n            });\n        }\n    };\n    /**\n     * \tReset the store's state history to an empty array.\n     */\n    ObservableStore.prototype.resetStateHistory = function () {\n        observable_store_base_1.default.stateHistory = [];\n    };\n    ObservableStore.prototype._updateState = function (state) {\n        observable_store_base_1.default.setStoreState(state);\n    };\n    ObservableStore.prototype._getStateOrSlice = function () {\n        var storeState = observable_store_base_1.default.getStoreState();\n        if (this._settings.stateSliceSelector) {\n            return this._settings.stateSliceSelector(storeState);\n        }\n        return storeState;\n    };\n    /**\n     * Dispatch the store's state without modifying the store state. Service state can be dispatched as well as the global store state.\n     * If `dispatchGlobalState` is false then global state will not be dispatched to subscribers (defaults to `true`).\n     */\n    ObservableStore.prototype.dispatchState = function (stateChanges, dispatchGlobalState) {\n        if (dispatchGlobalState === void 0) { dispatchGlobalState = true; }\n        // Get store state or slice of state\n        var clonedStateOrSlice = this._getStateOrSlice();\n        //  Get full store state\n        var clonedGlobalState = observable_store_base_1.default.getStoreState();\n        // includeStateChangesOnSubscribe is deprecated\n        if (this._settings.includeStateChangesOnSubscribe) {\n            console.log('includeStateChangesOnSubscribe is deprecated. ' +\n                'Subscribe to stateChangedWithChanges or globalStateChangedWithChanges instead.');\n            this._stateDispatcher$.next({ state: clonedStateOrSlice, stateChanges: stateChanges });\n            observable_store_base_1.default.globalStateDispatcher.next({ state: clonedGlobalState, stateChanges: stateChanges });\n        }\n        else {\n            this._stateDispatcher$.next(clonedStateOrSlice);\n            this._stateWithChangesDispatcher$.next({ state: clonedStateOrSlice, stateChanges: stateChanges });\n            if (dispatchGlobalState) {\n                observable_store_base_1.default.globalStateDispatcher.next(clonedGlobalState);\n                observable_store_base_1.default.globalStateWithChangesDispatcher.next({ state: clonedGlobalState, stateChanges: stateChanges });\n            }\n            ;\n        }\n    };\n    return ObservableStore;\n}());\nexports.ObservableStore = ObservableStore;\n//# sourceMappingURL=observable-store.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar cloner_service_1 = require(\"./utilities/cloner.service\");\n// Will be used to create a singleton\nvar ObservableStoreBase = /** @class */ (function () {\n    function ObservableStoreBase() {\n        this._storeState = null;\n        this._clonerService = new cloner_service_1.ClonerService();\n        this._extensions = [];\n        this.settingsDefaults = {\n            trackStateHistory: false,\n            logStateChanges: false,\n            // deprecated\n            includeStateChangesOnSubscribe: false,\n            stateSliceSelector: null\n        };\n        this.stateHistory = [];\n        this.globalStateDispatcher = new rxjs_1.BehaviorSubject(null);\n        this.globalStateWithChangesDispatcher = new rxjs_1.BehaviorSubject(null);\n        this.globalSettings = null;\n        this.services = []; // Track all services reading/writing to store. Useful for extensions like DevToolsExtension.\n    }\n    ObservableStoreBase.prototype.getStoreState = function () {\n        if (!this.globalSettings || (this.globalSettings && !this.globalSettings.isProduction)) {\n            // Deep clone in dev\n            return this.deepClone(this._storeState);\n        }\n        // Do NOT deep clone if not dev for performance\n        return __assign({}, this._storeState);\n    };\n    ObservableStoreBase.prototype.setStoreState = function (state) {\n        var clonedState = (state) ? __assign(__assign({}, this.getStoreState()), state) : null;\n        if (!this.globalSettings || (this.globalSettings && !this.globalSettings.isProduction)) {\n            // Clone in dev\n            clonedState = this.deepClone(clonedState);\n        }\n        // Do NOT clone if in something other than dev for performance\n        this._storeState = clonedState;\n    };\n    ObservableStoreBase.prototype.deepClone = function (obj) {\n        return this._clonerService.deepClone(obj);\n    };\n    ObservableStoreBase.prototype.addExtension = function (extension) {\n        this._extensions.push(extension);\n        extension.init();\n    };\n    return ObservableStoreBase;\n}());\n// Created once to initialize singleton\nexports.default = new ObservableStoreBase();\n//# sourceMappingURL=observable-store-base.js.map","// https://github.com/codeandcats/fast-clone/blob/master/index.js\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ClonerService = /** @class */ (function () {\n    function ClonerService() {\n    }\n    ClonerService.prototype.deepClone = function (value) {\n        var type = typeof value;\n        switch (type) {\n            case 'object':\n                // null and undefined\n                if (value == null) {\n                    return value;\n                }\n                var result = void 0;\n                if (value instanceof Date) {\n                    result = new Date();\n                    result.setTime(value.getTime());\n                    return result;\n                }\n                else if (value instanceof RegExp) {\n                    result = this.newRegExp(value);\n                    return result;\n                }\n                result = JSON.parse(JSON.stringify(value));\n                this.fixTypes(value, result);\n                return result;\n            default:\n                return value;\n        }\n    };\n    ClonerService.prototype.fixPropertyValue = function (original, copy, key) {\n        var originalValue = original[key];\n        var originalType = typeof originalValue;\n        switch (originalType) {\n            case 'object':\n                if (originalValue instanceof Date) {\n                    var newValue = new Date();\n                    newValue.setTime(originalValue.getTime());\n                    copy[key] = newValue;\n                }\n                else if (originalValue instanceof RegExp) {\n                    copy[key] = this.newRegExp(originalValue);\n                }\n                else if (originalValue == null) {\n                    copy[key] = originalValue;\n                }\n                else {\n                    this.fixTypes(originalValue, copy[key]);\n                }\n                break;\n            case 'number':\n                if (isNaN(originalValue)) {\n                    copy[key] = NaN;\n                }\n                else if (originalValue == Infinity) {\n                    copy[key] = Infinity;\n                }\n                break;\n            default:\n                break;\n        }\n    };\n    ClonerService.prototype.fixTypes = function (original, copy) {\n        var _this = this;\n        if (original instanceof Array) {\n            for (var index = 0; index < original.length; index++) {\n                this.fixPropertyValue(original, copy, index);\n            }\n        }\n        else {\n            var keys = Object.getOwnPropertyNames(original);\n            keys.forEach(function (key) {\n                _this.fixPropertyValue(original, copy, key);\n            });\n        }\n    };\n    ClonerService.prototype.newRegExp = function (value) {\n        var regexpText = String(value);\n        var slashIndex = regexpText.lastIndexOf('/');\n        return new RegExp(regexpText.slice(1, slashIndex), regexpText.slice(slashIndex + 1));\n    };\n    return ClonerService;\n}());\nexports.ClonerService = ClonerService;\n//# sourceMappingURL=cloner.service.js.map"],"sourceRoot":""}